# 질의응답 설계도 02
# 모든 질의응답과정을 함수, 파일로 쪼개야한다
# 랭그래프는 사용할 수 없다
# 기능 = 질문생성(모범답안 생성) / 질문답변인식 / 답변평가(답변별 세부평가 / 장 단점 피드백, 스코어) /  질문평가(모델평가) / 총평(강점, 단점, 한줄평, 총점, 문항별 세부평가)
# 질문과 모범답안은 5개가 한 번에 생성되어야 한다
# 생성된 것은 바로 DB에 저장된다
# 답변 평가는 문항별 세부평가 => 이후 총평으로 진행한다
# 문항별 세부평가는 질문과 키벨류값으로 DB에 저장한다
# 답변은 한 번에 받는다
# 
# 질문 필요 기능 
# - 키워드를 DB를 통해 받는다
# - 키워드를 GPT프롬프트와 벡터DB를 바탕으로 질문을 생성한다
# - 질문은 총 5개로 한다
# - 질문은 모두 달라야하며 키워드가 여러 개일 경우 여러 개의 키워드를 모두 사용하거나 랜덤값으로 키워드를 사용한다
# - 질문에 대한 모범답안을 생성한다
# - 질문은 리스트로 저장하여 프런트에 전달한다

# 질문 답변인식a
# - 질문 답변은 프런트를 통해 받는다
# - 답변은 한 번에 5개를 모두 받게 된다
# - 질문에 대해 답변을 매칭하여 저장한다

# 답변평가
# - 평가는 질문별 세부평가, 스코어(코사인 유사도)를 포함한다
# - 세부평가와 스코어는 따로 리스트화(또는 딕셔너리) 한다
# - 질문과 답변 모델답안 세가지를 바탕으로 평가를 작성한다
# 
# 총평 
# - 강점, 단점, 한줄평, 총점을 생성한다
# - 이 때 앞선 질의응답을 참조한다
# - 총점은 코사인 유사도의 평균으로 한다

# question tb
# - question tb을 데이터 프레임으로 작성한다
# - 질문생성 함수가 실행되는 순간 한 개의 interview id를 만들고 5개의 서로다른 question id를 생성하고 5개의 질문에 매칭한다 질문의 컬럼명은 job question으로 한다
# - 질문에 대한 모범답안 역시 질문과 같은 순서로 데이터 프레임에 전달한다 모범답안은 job solution으로 한다
# - 답변이 전달되는 순간 키값과 질문으로 대조하여 답변을 데이터 프레임에 저장한다 답변의 컬럼명은 job answer로 한다
# - 답변이 평가되는 순간 스코어 값만 question tb의 데이터프레임에 저장한다 컬럼명은 job score로 한다
# - 최종 데이터프레임을 models.py와 대조하여 DB에 저장한다
# 
# report tb
# - report tb을 데이터 프레임으로 작성한다
# - 질문생성 시 만들어진 interview id를 가져온다
# - 강점(strength), 단점(weakness), 한줄평(ai summary), 총점(report score)